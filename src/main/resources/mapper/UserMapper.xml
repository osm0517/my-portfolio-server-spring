<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위 코드가 mapper 설정을 하는 코드 -->


<!-- Mapper를 사용하는 Repository의 전체 경로를 적어줘야함. -->
<mapper namespace="com.example.community.repository.UserRepository">
    <!--  select query  -->

    <select id="selectAll" resultType="User">
        SELECT * FROM user_tb
    </select>

    <select id="selectPassword" resultType="String" parameterType="String">
        SELECT password FROM user_tb WHERE userId = #{userId}
    </select>

    <select id="countAuth" resultType="Integer" parameterType="String">
        SELECT count(*) FROM user_auth_tb WHERE email = #{email}
    </select>

    <select id="findAuthByUserId" resultType="String" parameterType="String">
        SELECT auth FROM user_tb WHERE userId = #{userId}
    </select>

    <select id="selectAuth" resultType="String" parameterType="String">
        SELECT randomstring FROM user_auth_tb WHERE email = #{email}
    </select>

    <select id="infoOverlap" resultType="String" parameterType="User">
        SELECT email FROM user_tb WHERE
        <trim suffixOverrides=",">
            <if test="email != null"> email = #{email} </if>
            <if test="nickname != null"> nickname = #{nickname} </if>
            <if test="userId != null"> userId = #{userId} </if>
        </trim>
    </select>

    <!--  insert query  -->
    <insert id="signup" parameterType="User">
        INSERT INTO user_tb(email, password, name, nickname, userId) VALUES (#{email}, #{password}, #{name}, #{nickname}, #{userId})
    </insert>

    <insert id="createAuth" parameterType="Auth">
        INSERT INTO user_auth_tb(email,  randomstring) VALUES (#{email}, #{randomstring})
    </insert>

    <!--  update query  -->
    <update id="change" parameterType="User">
        UPDATE user_tb SET
        <choose>
            <when test="password != null"> password = #{password} </when>
            <when test="name != null"> name = #{name} </when>
            <otherwise> nickname = #{nickname} </otherwise>
        </choose>
        WHERE email = #{email}
    </update>

    <!--  delete query  -->
    <delete id="delete" parameterType="String">
        DELETE FROM user_tb WHERE userId = #{userId}
    </delete>

    <delete id="deleteAuth" parameterType="String">
        DELETE FROM user_auth_tb WHERE email = #{email}
    </delete>
</mapper>